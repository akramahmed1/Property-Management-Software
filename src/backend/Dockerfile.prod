# Production Dockerfile for Backend
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY src/backend/package*.json ./src/backend/

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY src/backend/ ./src/backend/

# Build the application
WORKDIR /app/src/backend
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

WORKDIR /app

# Copy built application
COPY --from=builder --chown=nodejs:nodejs /app/src/backend/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/src/backend/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/src/backend/package*.json ./

# Copy Prisma files
COPY --from=builder --chown=nodejs:nodejs /app/src/backend/prisma ./prisma

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]
